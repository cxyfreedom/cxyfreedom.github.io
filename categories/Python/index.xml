<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Field of Hope</title>
    <link>https://reishin.me/categories/Python/</link>
    <description>Recent content in Python on Field of Hope</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 28 Mar 2020 21:53:30 +0800</lastBuildDate><atom:link href="https://reishin.me/categories/Python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tornado 模板引擎原理解析</title>
      <link>https://reishin.me/tornado-template-engine-analysis/</link>
      <pubDate>Sat, 28 Mar 2020 21:53:30 +0800</pubDate>
      
      <guid>https://reishin.me/tornado-template-engine-analysis/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Python 中容易出现误解的特性</title>
      <link>https://reishin.me/lesser-known-features-in-python/</link>
      <pubDate>Fri, 30 Aug 2019 18:38:05 +0800</pubDate>
      
      <guid>https://reishin.me/lesser-known-features-in-python/</guid>
      <description>&lt;p&gt;阅读了&lt;a href=&#34;https://github.com/satwikkansal/wtfpython#-be-careful-with-chained-operations&#34;&gt;wtfpython&lt;/a&gt;，发现 Python 中还有许多自己不知道的一些细节和特性。本文根据原文记录了一些自己不熟悉和容易忘记的一些点。更多的内容可以直接去看原文。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用 HashRing 实现 Python 下的一致性哈希算法</title>
      <link>https://reishin.me/python-consistent-hash/</link>
      <pubDate>Mon, 29 Apr 2019 14:43:31 +0800</pubDate>
      
      <guid>https://reishin.me/python-consistent-hash/</guid>
      <description>&lt;p&gt;当我们需要实现服务器负载均衡的时候，能够实现负载均衡的算法有很多种，包括：轮询算法（Round Robin）、哈希算法（Hash）、最少连接算法（Least Connection）、响应速度算法（Response Time）、加权法（Weighted）等等。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python 中 Redis 连接池原理</title>
      <link>https://reishin.me/python-redis-pool/</link>
      <pubDate>Thu, 25 Apr 2019 18:33:45 +0800</pubDate>
      
      <guid>https://reishin.me/python-redis-pool/</guid>
      <description>&lt;p&gt;通常情况下，我们进行 &lt;code&gt;redis&lt;/code&gt; 操作时，会创建一个连接，并基于这个连接进行操作。操作完成后，释放该连接。但是当并发较高时，频繁的创建和释放会对性能造成影响。连接池的原理是通过预先创建多个连接。进行获取已经创建好的连接进行操作，操作完成之后，不会进行释放，可以用于后续其他redis的操作。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python 中的一些技巧</title>
      <link>https://reishin.me/python-tricks/</link>
      <pubDate>Thu, 10 Jan 2019 18:08:40 +0800</pubDate>
      
      <guid>https://reishin.me/python-tricks/</guid>
      <description>&lt;p&gt;本文为阅读 《Python Tricks A Buffet of Awesome Python Features》书籍的笔记，仅供自己参考。由于大部分内容熟知，所以并未记录。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python 中给文件加锁——fcntl</title>
      <link>https://reishin.me/python-module-fcntl/</link>
      <pubDate>Tue, 08 Jan 2019 15:02:07 +0800</pubDate>
      
      <guid>https://reishin.me/python-module-fcntl/</guid>
      <description>&lt;p&gt;在 Python 中，如果想要给一个文件加锁，可以使用 &lt;code&gt;fcntl&lt;/code&gt; 模块。其中有 &lt;code&gt;flock&lt;/code&gt; 和 &lt;code&gt;lockf&lt;/code&gt; 两种不同的方式。首先我们先了解一下在 Linux 中的文件锁。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>解析自定义 Logger 后会打印第三方库中 Logger 日志的原因</title>
      <link>https://reishin.me/python-custom-logger/</link>
      <pubDate>Wed, 26 Dec 2018 15:35:13 +0800</pubDate>
      
      <guid>https://reishin.me/python-custom-logger/</guid>
      <description>&lt;p&gt;在使用第三方库 pika 连接 RabbitMQ 的代码中，自定义了 Logger，并将相关配置写在了配置文件中。但是执行程序发现，pika 库中本身的 Logger 日志也写入到了文件，但我们只希望记录我们自己所写的日志。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python源码解析——可重入锁RLock</title>
      <link>https://reishin.me/python-source-code-parse-with-rlock/</link>
      <pubDate>Mon, 20 Aug 2018 20:07:47 +0000</pubDate>
      
      <guid>https://reishin.me/python-source-code-parse-with-rlock/</guid>
      <description>&lt;p&gt;本文主要针对 Python 中的可重入锁 RLock 的源码剖析。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
